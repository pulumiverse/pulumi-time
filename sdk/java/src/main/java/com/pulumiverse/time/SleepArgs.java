// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.time;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SleepArgs extends com.pulumi.resources.ResourceArgs {

    public static final SleepArgs Empty = new SleepArgs();

    /**
     * [Time duration](https://golang.org/pkg/time/#ParseDuration) to delay resource creation. For example, `30s` for 30 seconds or `5m` for 5 minutes. Updating this value by itself will not trigger a delay.
     * 
     */
    @Import(name="createDuration")
    private @Nullable Output<String> createDuration;

    /**
     * @return [Time duration](https://golang.org/pkg/time/#ParseDuration) to delay resource creation. For example, `30s` for 30 seconds or `5m` for 5 minutes. Updating this value by itself will not trigger a delay.
     * 
     */
    public Optional<Output<String>> createDuration() {
        return Optional.ofNullable(this.createDuration);
    }

    @Import(name="destroyDuration")
    private @Nullable Output<String> destroyDuration;

    public Optional<Output<String>> destroyDuration() {
        return Optional.ofNullable(this.destroyDuration);
    }

    /**
     * (Optional) Arbitrary map of values that, when changed, will run any creation or destroy delays again. See the main provider documentation for more information.
     * 
     */
    @Import(name="triggers")
    private @Nullable Output<Map<String,String>> triggers;

    /**
     * @return (Optional) Arbitrary map of values that, when changed, will run any creation or destroy delays again. See the main provider documentation for more information.
     * 
     */
    public Optional<Output<Map<String,String>>> triggers() {
        return Optional.ofNullable(this.triggers);
    }

    private SleepArgs() {}

    private SleepArgs(SleepArgs $) {
        this.createDuration = $.createDuration;
        this.destroyDuration = $.destroyDuration;
        this.triggers = $.triggers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SleepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SleepArgs $;

        public Builder() {
            $ = new SleepArgs();
        }

        public Builder(SleepArgs defaults) {
            $ = new SleepArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createDuration [Time duration](https://golang.org/pkg/time/#ParseDuration) to delay resource creation. For example, `30s` for 30 seconds or `5m` for 5 minutes. Updating this value by itself will not trigger a delay.
         * 
         * @return builder
         * 
         */
        public Builder createDuration(@Nullable Output<String> createDuration) {
            $.createDuration = createDuration;
            return this;
        }

        /**
         * @param createDuration [Time duration](https://golang.org/pkg/time/#ParseDuration) to delay resource creation. For example, `30s` for 30 seconds or `5m` for 5 minutes. Updating this value by itself will not trigger a delay.
         * 
         * @return builder
         * 
         */
        public Builder createDuration(String createDuration) {
            return createDuration(Output.of(createDuration));
        }

        public Builder destroyDuration(@Nullable Output<String> destroyDuration) {
            $.destroyDuration = destroyDuration;
            return this;
        }

        public Builder destroyDuration(String destroyDuration) {
            return destroyDuration(Output.of(destroyDuration));
        }

        /**
         * @param triggers (Optional) Arbitrary map of values that, when changed, will run any creation or destroy delays again. See the main provider documentation for more information.
         * 
         * @return builder
         * 
         */
        public Builder triggers(@Nullable Output<Map<String,String>> triggers) {
            $.triggers = triggers;
            return this;
        }

        /**
         * @param triggers (Optional) Arbitrary map of values that, when changed, will run any creation or destroy delays again. See the main provider documentation for more information.
         * 
         * @return builder
         * 
         */
        public Builder triggers(Map<String,String> triggers) {
            return triggers(Output.of(triggers));
        }

        public SleepArgs build() {
            return $;
        }
    }

}
